def ImgTest4(img_input, coldepth, gamma=4):
    # solusi 1
    # img_output=ImageOps.invert(img_input)

    # solusi 2
    if coldepth != 24:
        img_input = img_input.convert('RGB')

    img_output = Image.new('RGB', (img_input.size[0], img_input.size[1]))
    pixels = img_output.load()
    PIXEL = img_input.load()
    for i in range(img_output.size[0]):
        for j in range(img_output.size[1]):

            if j < int((img_output.size[1]/2)):
                if i > (img_output.size[1]/2):
                    # r, g, b = img_input.getpixel((i, j))
                    # gray = (r+g+b)//3
                    # pixels[i, j] = (gray, gray, gray)
                    r, g, b = img_input.getpixel((i, j))
                    pixels[i, j] = (255-r, 255-g, 255-b)

                else:
                    if PIXEL[i, j] < (128, 128, 128):
                        pixels[i, j] = (0, 0, 0)
                    elif PIXEL[i, j] >= (128, 128, 128):
                        pixels[i, j] = (255, 255, 255)

            else:
                if i > (img_output.size[1]/2):
                    r, g, b = img_input.getpixel((i, j))
                    pixels[i, j] = (r, g, b)
                else:
                    r, g, b = img_input.getpixel((i, j))
                    pixels[i, j] = (int(255*(r/255)**gamma),
                                    int(255*(g/255)**gamma), int(255*(b/255)**gamma))

    if coldepth == 1:
        img_output = img_output.convert("1")

    elif coldepth == 8:
        img_output = img_output.convert("L")

    else:
        img_output = img_output.convert("RGB")

    return img_output
